// Mocks generated by Mockito 5.4.4 from annotations
// in cos_challenge/test/vin_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cos_challenge/core/services/local_storage_service.dart' as _i2;
import 'package:cos_challenge/features/vin_input/infrastructure/vin_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocalStorageService_0 extends _i1.SmartFake
    implements _i2.LocalStorageService {
  _FakeLocalStorageService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [VinRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockVinRepository extends _i1.Mock implements _i3.VinRepository {
  MockVinRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LocalStorageService get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeLocalStorageService_0(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i2.LocalStorageService);

  @override
  _i4.Future<Map<String, dynamic>> fetchVin(String? vin) =>
      (super.noSuchMethod(
            Invocation.method(#fetchVin, [vin]),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);
}
